name: Deploy to AWS Lambda

on:
  push:
    tags: 'v*'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Package and deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TARGET_S3_BUCKET: ${{ secrets.TARGET_S3_BUCKET }}
          TARGET_S3_KEY: ${{ secrets.TARGET_S3_KEY }}
          TARGET_LAMBDA_FUNCTION: ${{ secrets.TARGET_LAMBDA_FUNCTION }}
          CACHE_TABLE_NAME: ${{ secrets.CACHE_TABLE_NAME }}
        run: |
          [ -z "${AWS_ACCESS_KEY_ID}" ] && echo "AWS_ACCESS_KEY_ID is not set." && exit 1
          [ -z "${AWS_SECRET_ACCESS_KEY}" ] && echo "AWS_SECRET_ACCESS_KEY is not set." && exit 1
          [ -z "${AWS_DEFAULT_REGION}" ] && echo "AWS_DEFAULT_REGION is not set." && exit 1
          [ -z "${TARGET_S3_BUCKET}" ] && echo "TARGET_S3_BUCKET is not set." && exit 1
          [ -z "${TARGET_S3_KEY}" ] && echo "TARGET_S3_KEY is not set." && exit 1
          [ -z "${TARGET_LAMBDA_FUNCTION}" ] && echo "TARGET_LAMBDA_FUNCTION is not set." && exit 1
          [ -z "${CACHE_TABLE_NAME}" ] && echo "CACHE_TABLE_NAME is not set." && exit 1
          
          ./dev-install.sh
          pytest

          # Patch version
          echo "${GITHUB_REF:11}" > ./stock_info/VERSION
          
          # Package
          ./pack-for-lambda.sh
          aws s3 cp output.zip s3://${TARGET_S3_BUCKET}/${TARGET_S3_KEY}
          aws lambda update-function-code --function-name ${TARGET_LAMBDA_FUNCTION} --s3-bucket ${TARGET_S3_BUCKET} --s3-key ${TARGET_S3_KEY}